import Head from "next/head";
import {Character} from "@/components/characters/Character";
import {Pillar} from "@/components/obstacles/Pillar";
import {Score} from "@/components/game/Score";
import {GameOver} from "@/components/game/GameOver";
import useGameEngine from "@/game_engine/game_engine";
import useObstacles from "@/game_engine/obstacles";
import {CHAR_HEIGHT, CHAR_WIDTH, GAME_HEIGHT} from "@/constants/game";
import useCharacter from "@/game_engine/character";

export default function Home() {
    const { obstacles, setActiveObstacleIndex, setObstacles, activeObstacleIndex } = useObstacles();
    const { charRef, jump, charCoords } = useCharacter();
    const { points, isGameOver, obstacleRefs } = useGameEngine({
        setObstacles,
        activeObstacleIndex,
        setActiveObstacleIndex,
        charCoords
    });

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main>
                <div style={{
                    position: 'relative',
                    width: '100%',
                    height: `${GAME_HEIGHT}px`,
                    overflow: 'hidden',
                    backgroundColor: '#ddd'
                }}>
                    <Character width={CHAR_WIDTH} height={CHAR_HEIGHT} ref={charRef} jump={jump} />
                    {obstacles.map((obstacle) => (
                        <Pillar
                            key={obstacle.id}
                            ref={(el) => (obstacleRefs.current[obstacle.id] = el)}
                            position={obstacle.position}
                        />
                    ))}
                    {isGameOver && <GameOver />}
                    <Score points={parseInt(points/10)} />
                </div>
            </main>
        </>
    );
}
